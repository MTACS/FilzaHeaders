//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "GDHTTPClient.h"

@class GDWebDAVCredential, NSURL;

__attribute__((visibility("hidden")))
@interface GDWebDAVClient : GDHTTPClient
{
    NSURL *_baseURL;
}

@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)metadataArrayFromXMLNode:(id)arg1 baseURL:(id)arg2;
- (id)objectFromXMLNode:(id)arg1;
- (id)contentStringForElementWithName:(id)arg1 inXMLElement:(id)arg2;
- (void)deleteChildOfXMLElement:(id)arg1 withName:(id)arg2;
- (void)setString:(id)arg1 asContentForElementWithName:(id)arg2 inXMLElement:(id)arg3;
- (id)uploadFile:(id)arg1 mimeType:(id)arg2 toWebDAVPath:(id)arg3 progress:(CDUnknownBlockType)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (id)downloadFile:(id)arg1 intoPath:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)copyOrMove:(id)arg1 fromPath:(id)arg2 toPath:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)movePath:(id)arg1 toPath:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)copyPath:(id)arg1 toPath:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)deletePath:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)createPath:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)getPROPFINDResponseForPath:(id)arg1 depth:(unsigned long long)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)getContentsOfDirectoryAtPath:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)getMetadataForPath:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)validateWebDAVServerWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)xmlDataByFillingXMLTemplateName:(id)arg1 substitutionVariables:(id)arg2;
- (id)enqueueWebDAVRequestOperationWithMethod:(id)arg1 path:(id)arg2 urlParameters:(id)arg3 httpParameters:(id)arg4 xmlTemplateName:(id)arg5 substitutionVariables:(id)arg6 success:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
- (id)enqueueOperationWithURLRequest:(id)arg1 requiresAuthentication:(_Bool)arg2 shouldRetryBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5 configureOperationBlock:(CDUnknownBlockType)arg6;
- (id)webDAVRequestWithMethod:(id)arg1 path:(id)arg2 urlParameters:(id)arg3 httpParameters:(id)arg4 xmlTemplateName:(id)arg5 substitutionVariables:(id)arg6;
- (void)updateBaseURLDueToRedirectFromURL:(id)arg1 toURL:(id)arg2;
- (_Bool)isAuthenticationFailureError:(id)arg1;
- (id)initWithClientManager:(id)arg1 credential:(id)arg2 baseURL:(id)arg3;

// Remaining properties
@property(retain) GDWebDAVCredential *credential; // @dynamic credential;

@end

